name: UPLOAD

on:
  workflow_call:
    secrets:
      TOKEN:
        required: true
    inputs:
      node_version:
        type: string
        required: true

jobs:
  call_workflow:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && startsWith(github.head_ref, 'develop')
    uses: ./.github/workflows/_npm.yml
    with:
      node_version: '${{ inputs.node_version }}'

  upload:
    needs:
      - call_workflow

    runs-on: ubuntu-latest

    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.4

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: '${{ inputs.node_version }}'

      - name: Restore node_modules
        uses: actions/cache@v4.0.2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

          # uses: actions/cache@v4
          # with:
          #   path: ~/.npm
          #   key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          #   restore-keys: ${{ runner.os }}-npm-

        # - name: Install node modules
        #   if: steps.cache.npm.cache-hit == 'false'
        #   run: npm install

        # - name: CI node modules
        #   if: steps.cache.npm.cache-hit == 'true'
        #   run: npm ci

        # - name: Build Next.js app
        #   if: github.event_name == 'repository_dispatch'  # repository_dispatch イベントの場合のみ実行
        #   run: npm run build

        # - name: Deploy via FTP
        #   if: github.ref == 'refs/heads/main'  # mainブランチにマージされた場合のみ実行
        #   uses: SamKirkland/FTP-Deploy-Action@4.2.0
        #   with:
        #     protocol: ftp
        #     server: ${{ vars.HOST }}       # FTPのサーバーアドレス
        #     username: ${{ vars.USER_NAME }}   # FTPのユーザー名
        #     password: ${{ secrets.FTP_PASSWORD }}   # FTPのパスワード
        #     local-dir: ${{ vars.LOCAL_PATH }}      # アップロードしたいファイルのパス、この場合srcディレクトリ内をアップロード対象としている
        #     server-dir: ${{ vars.REMOTE_PATH }}     # アップロード先のリモートパス




        # - name: Deploy via SFTP
        #   uses: wangyucode/sftp-upload-action@v2.0.2
        #   with:
        #     host: ${{ vars.SFTP_HOST }}
        #     username: ${{ vars.SFTP_USER_NAME }}
        #     password: ${{ secrets.SFTP_PASSWORD }}
        #     localDir: ${{ vars.LOCAL_PATH }}
        #     remoteDir: /faloom.jp/pc/test/
        #     port:  ${{ vars.SFTP_PORT }}

        # - name: Commit and push build changes
        #   if: github.event_name == 'repository_dispatch'  # repository_dispatch イベントの場合のみ実行
        #   run: |
        #     git config --local user.email "sysadmin@pia-corp.jp"
        #     git config --local user.name "GitHub Action"
        #     git add .
        #     git commit -m "Build Next.js app"
        #     git push origin main

  create-release-tag:
    runs-on: ubuntu-latest

    timeout-minutes: 5

    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && startsWith(github.head_ref, 'develop')

    env:
      GH_TOKEN: ${{ secrets.TOKEN }}
      TZ: 'Asia/Tokyo'

    steps:
      - name: Get previous tag
        id: pre_tag
        run: |
          echo "::set-output name=pre_tag::$(curl -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)"

      - name: Generate release tag
        id: release_tag
        run: |
          today=$(date +'%Y.%m.%d')
          pre_release_date=$(echo ${{ steps.pre_tag.outputs.pre_tag }} | awk -F'-' '{print $1}')
          pre_release_count=$(echo ${{ steps.pre_tag.outputs.pre_tag }} | awk -F'-' '{print $2}')
          if [[ ! $pre_release_date = $today ]]; then
            echo "init count"
            pre_release_count=0
          fi
          echo "::set-output name=release_tag::$today-$(($pre_release_count + 1))"

      - name: Generate release note
        id: release_note
        run: |
          echo "::set-output name=release_note::$(curl -X POST -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/generate-notes -d '{"tag_name":"${{ steps.release_tag.outputs.release_tag }}", "previous_tag_name":"${{ steps.pre_tag.outputs.pre_tag }}"}' | jq .body | sed 's/"//g')"

      - name: Create Release
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.TOKEN }}" \
            -d "{ \"tag_name\": \"${{ steps.release_tag.outputs.release_tag }}\", \"name\": \"${{ steps.release_tag.outputs.release_tag }}\", \"body\": \"${{ steps.release_note.outputs.release_note }}\"}" \
            https://api.github.com/repos/${{ github.repository }}/releases
