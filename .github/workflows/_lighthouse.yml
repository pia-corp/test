name: Preview URL Lighthouse Audit

on:
  workflow_call:

jobs:
  Lighthouse:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      issues: write
      pull-requests: write
    strategy:
      matrix:
        platform: [".lighthouserc_pc.json",".lighthouserc.json"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.1.4
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: "${{ vars.GIT_ACTIONS_NODE_VER }}"

      - name: Restore node_modules
        uses: actions/cache@v4.0.2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Dependency Installation (If there is no cache)
        if: steps.restore_node_modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit --progress=false --silent

      # - name: run Lighthouse CI
      #   run: |
      #     npm install -g @lhci/cli@0.13.x
      #     lhci autorun
      #   env:
      #     LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      #   continue-on-error: true

      # - name: Parse Lighthouse CI report
      #   id: parse-report
      #   run: |
      #     report_json=$(cat ./lhci/lhci-report.json)
      #     report_data=$(echo $report_json | jq .)
      #     # Parse report data here and store results in variables

      - name: Run Lighthouse against a static dist dir
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v11
        with:
          configPath: './.github/config/.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
        continue-on-error: true

      - name: Comment on PR
        id: format_lighthouse_score
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const assertionResults = "hoge: ${{steps.lighthouse_audit.outputs.assertionResults.passed}}";
            const assertionResults2 = "hogehoge: ${{steps.lighthouse_audit.outputs.assertionResults.message}}";
            const urls = ${{steps.lighthouse_audit.outputs.links}};
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary;
            const obj = ${{ steps.lighthouse_audit.outputs.manifest }};
            const formatResult = (res) => Math.round((res * 100));
            const file_name = (url) => { return url.replace(/^http:\/\/localhost:\d+\//, ""); };
            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥';
            const getValueByKey = (key) => { return urls[key] || null };

            let view_text = "";
              const table_body = (urlArray) => {
                if (urlArray.isRepresentativeRun == true) {
                  const accessibility = formatResult(urlArray.summary["accessibility"]);
                  const practices = formatResult(urlArray.summary["best-practices"]);
                  const performance = formatResult(urlArray.summary["performance"]);
                  const seo = formatResult(urlArray.summary["seo"]);
                  view_text += `[${file_name(urlArray.url)}](${getValueByKey(urlArray.url)}) | ${score(performance)} ${performance} | ${score(accessibility)} ${accessibility} | ${score(practices)} ${practices} | ${score(seo)} ${seo} |`;
                }
            };
            Object.keys(obj).forEach(key => obj[key] = table_body(obj[key]));

            let param = {
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚ö°Ô∏è [Lighthouse Mobile Report]:

            | File name | Performance | Accessibility | Best practices | SEO |
            | --- | --- | --- | --- | --- |
            ${view_text}

            ‚Äª„Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÁµêÊûú„ÅØ+-10Á®ãÂ∫¶„ÅÆ„Éñ„É¨„Åå„ÅÇ„Çä„Åæ„Åô„É™„É≥„ÇØÂÖà„ÅÆË®∫Êñ≠ÁµêÊûú„ÇíË¶ã„Å¶Âà§Êñ≠„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ`};

            await github.rest.issues.createComment(param);



          # const obj = [
          #   {"url":"http://localhost:38639/about.html",
          # "isRepresentativeRun":false,
          # "htmlPath":"/home/runner/work/test/test/.lighthouseci/localhost-_about_html-2024_05_12_04_29_35.report.html",
          # "jsonPath":"/home/runner/work/test/test/.lighthouseci/localhost-_about_html-2024_05_12_04_29_35.report.json",
          # "summary":{"performance":0.54,
          # "accessibility":0.82,
          # "best-practices":0.74,
          # "seo":0.92,
          # "pwa":0.38}},
          # {"url":"http://localhost:38639/about.html","isRepresentativeRun":false,"htmlPath":"/home/runner/work/test/test/.lighthouseci/localhost-_about_html-2024_05_12_04_30_00.report.html","jsonPath":"/home/runner/work/test/test/.lighthouseci/localhost-_about_html-2024_05_12_04_30_00.report.json","summary":{"performance":0.65,"accessibility":0.82,"best-practices":0.74,"seo":0.92,"pwa":0.63}},{"url":"http://localhost:38639/company.html","isRepresentativeRun":false,"htmlPath":"/home/runner/work/test/test/.lighthouseci/localhost-_company_html-2024_05_12_04_30_15.report.html","jsonPath":"/home/runner/work/test/test/.lighthouseci/localhost-_company_html-2024_05_12_04_30_15.report.json","summary":{"performance":0.55,"accessibility":0.93,"best-practices":0.56,"seo":1,"pwa":0.63}},{"url":"http://localhost:38639/company.html","isRepresentativeRun":false,"htmlPath":"/home/runner/work/test/test/.lighthouseci/localhost-_company_html-2024_05_12_04_30_28.report.html","jsonPath":"/home/runner/work/test/test/.lighthouseci/localhost-_company_html-2024_05_12_04_30_28.report.json","summary":{"performance":0.58,"accessibility":0.93,"best-practices":0.56,"seo":1,"pwa":0.63}},{"url":"http://localhost:38639/about.html","isRepresentativeRun":true,"htmlPath":"/home/runner/work/test/test/.lighthouseci/localhost-_about_html-2024_05_12_04_29_48.report.html","jsonPath":"/home/runner/work/test/test/.lighthouseci/localhost-_about_html-2024_05_12_04_29_48.report.json","summary":{"performance":0.61,"accessibility":0.82,"best-practices":0.74,"seo":0.92,"pwa":0.63}},{"url":"http://localhost:38639/company.html","isRepresentativeRun":true,"htmlPath":"/home/runner/work/test/test/.lighthouseci/localhost-_company_html-2024_05_12_04_30_41.report.html","jsonPath":"/home/runner/work/test/test/.lighthouseci/localhost-_company_html-2024_05_12_04_30_41.report.json","summary":{"performance":0.6,"accessibility":0.93,"best-practices":0.56,"seo":1,"pwa":0.63}}];
