name: Copy Assets from test
on:
  # repository_dispatchでサーバ側のymlで指定したevent-type `directory-changes`をフックする
  repository_dispatch:
    types: [directory-changes]

jobs:
  directory-changes:
    if: github.event.action != 'closed'
    name: Copy Assets
    runs-on: ubuntu-latest
    steps:
      # コピー先のリポジトリをclone
      - name: Clone
        uses: actions/checkout@v4.1.6
        with:
          ref: ${{ github.head_ref }}

      # GitHub Actionsのコンテキストを表示するためにechoを使用
      - name: Display event action
        run: |
          echo "GitHub event action: ${{ github.event.action }}"

      # コピー元リポジトリをclone
      - name: Clone <サーバ側リポジトリ名>
        uses: actions/checkout@v4.1.6
        with:
          repository: pia-corp/test
          path: test
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      # デバッグ: コピー先リポジトリの内容を表示
      - name: List Server Repo Files
        run: ls -R test

      # - name: Copy Files
      #   run: |
      #     find test -type f ! -path ".git/*" ! -path "out/*" ! -path "images/*" ! -path "public/*" -exec cp --parents {} . \;

      - name: Copy .github Files
        run: |
          rsync -av --exclude='.github/workflows/sync_repositories.yml' test/ .

      # # サーバ側リポジトリ/.githubとout以下のファイルをアプリ側リポジトリにコピー（sync_repositories.ymlを除外）
      # - name: Copy .github Files
      #   run: |
      #     if [ -d "test/.github" ]; then
      #       # cp -r test/.github/* .github
      #       find test/.github -type f ! -name 'sync_repositories.yml' -exec cp --parents {} . \;
      #     else
      #       echo "No .github files to copy"
      #     fi

      - name: Copy components Files
        run: |
          mkdir -p components
          cp -r test/components/* components

      - name: Copy interfaces Files
        run: |
          mkdir -p interfaces
          cp -r test/interfaces/* interfaces

      - name: Copy libs Files
        run: |
          mkdir -p libs
          cp -r test/libs/* libs

      - name: Copy types Files
        run: |
          mkdir -p types
          cp -r test/types/* types

      - name: Copy templates Files
        run: |
          mkdir -p templates
          cp -r test/templates/* templates

      - name: Copy pages Files
        run: |
          mkdir -p pages
          cp -r test/pages/* pages

      # # サーバ側リポジトリ/Assets以下のファイルをアプリ側リポジトリ/Assetsへコピー
      # - name: Copy assets files
      #   run: |
      #     if [ -d "test/.github" ]; then
      #       find test -type f ! -path "test/.git/*" ! -path "test/out/*" ! -path "test/images/*" ! -path "test/public/*" ! -name 'package-lock.json' -exec cp --parents {} . \;
      #     else
      #       echo "No files to copy"
      #     fi

      # コピーが済んだためcloneしたサーバ側リポジトリを削除
      - name: Clean .github
        run: rm -rf test

      # Git 状態確認
      - name: Check Git Status
        run: git status

      # プルリク作成
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6.0.5
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          commit-message: 'Update Assets'
          branch: develop/asset-files-changes
          base: main
          # 同一ブランチ名にならないよう後ろにタイムスタンプを付加
          branch-suffix: timestamp
          delete-branch: false
