name: Create Tag

on:
  pull_request:
    branches:
      - 'release/**'
    types:
      - closed

jobs:
  create_tag:
    if: contains(github.head_ref, 'release')
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.4
        with:
          ref: main

      - name: Get previous tag
        id: pre_tag
        run: |
          echo "pre_tag=$(curl -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)" >> $GITHUB_ENV

      - name: Generate release tag
        id: release_tag
        run: |
          today=$(date +'%Y.%m.%d')
          pre_release_date=$(echo "${{ env.pre_tag }}" | awk -F'-' '{print $1}')
          pre_release_count=$(echo "${{ env.pre_tag }}" | awk -F'-' '{print $2}')
          if [[ ! $pre_release_date = $today ]]; then
            echo "init count"
            pre_release_count=0
          fi
          echo "release_tag=$today-$("v" + ($pre_release_count + 1))" >> $GITHUB_ENV

      - name: Generate release note
        id: release_note
        run: |
          release_note=$(curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/generate-notes \
            -d "{\"tag_name\":\"${{ env.release_tag }}\", \"previous_tag_name\":\"${{ env.pre_tag }}\"}" | jq .body | sed 's/"//g')
          echo "release_note=$release_note" >> $GITHUB_ENV

      - name: Create Release
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{ \"tag_name\": \"${{ env.release_tag }}\", \"name\": \"${{ env.release_tag }}\", \"body\": \"${{ env.release_note }}\"}" \
            https://api.github.com/repos/${{ github.repository }}/releases
