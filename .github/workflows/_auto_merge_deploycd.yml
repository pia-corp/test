name: AUTO MERGE

on:
  workflow_call:
    secrets:
      APIKEY:
        required: true
      TOKEN:
        required: true
      PTOKEN:
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      GITHUB_TOKEN: ${{ secrets.TOKEN }}
      RELEASE_BRANCH_NAME: ${{ github.run_id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.4

      - name: Checkout code
        uses: actions/checkout@v4.1.4
        with:
          ref: ${{ github.head_ref || github.ref_name }}


      - name: Set Git configuration
        run: |
          git config --global user.name "pia"
          git config --global user.email "sysadmin@pia-corp.jp"

      - name: Create new branch
        run: |
          git checkout -b release/github_${{ env.RELEASE_BRANCH_NAME }}

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: "${{ vars.GIT_ACTIONS_NODE_VER }}"
          cache: npm

      - name: Restore node_modules
        uses: actions/cache@v4.0.2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Dependency Installation (If there is no cache)
        if: steps.restore_node_modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit --progress=false --silent

      - name: Lint and rewrite markup
        run: npm run formatting

      - name: Build Next.js App
        run: npx next build
        env:
          MICROCMS_SERVICE_DOMAIN: ${{ vars.MICROCMS_SERVICE_DOMAIN }}
          MICROCMS_API_KEY: ${{ secrets.APIKEY }}

      - name: Commit existing changes
        run: |
          git add .
          if ! git diff-index --quiet HEAD; then
            git commit -m "Commit existing changes for PR"
          else
            echo "No changes to commit"
          fi

      - name: Push new branch
        run: |
          git push -u origin release/github_${{ env.RELEASE_BRANCH_NAME }}

      - name: Create PR
        run: |
          gh pr create --fill
        env:
          GITHUB_TOKEN: ${{ secrets.PTOKEN }}

      - name: Auto-merge PR
        run: gh pr merge --auto --merge
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
