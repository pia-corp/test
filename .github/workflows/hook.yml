name: HeadlessCMS webhook

on:
  repository_dispatch:
    types: [update-posts]

jobs:
  process_data:
    runs-on: ubuntu-latest
    outputs:
      exists_brand: ${{ steps.set_exists.outputs.exists_brand }}

    steps:
      - name: Get Data from MicroCMS
        env:
          DOMAIN: ${{ vars.MICROCMS_SERVICE_DOMAIN }}
          API_KEY: ${{ secrets.MICROCMS_API_KEY }}
        run: |
          article_id=${{ github.event.client_payload.id }}
          DATA=$(curl -X GET "https://${{ env.DOMAIN }}.microcms.io/api/v1/news/$article_id" -H "X-MICROCMS-API-KEY: ${{ env.API_KEY }}")
          echo "$DATA" > data.json
          echo "data=$(cat data.json | jq -c '.')" >> $GITHUB_ENV

      - name: Confirm Data
        id: set_exists
        env:
          REPOSITORY: ${{ github.event.repository.name }}
          DATA: ${{ env.data }}
        run: |
          CATEGORY=$(echo "$DATA" | jq -r '.category[0]')
          if [[ "$CATEGORY" == "$REPOSITORY" ]]; then
            echo "Category match: true"
            echo "exists_brand=1" >> $GITHUB_ENV
          else
            echo "Category match: false"
            echo "exists_brand=0" >> $GITHUB_ENV
          fi

  execute_process:
    needs: process_data
    runs-on: ubuntu-latest
    steps:
      - name: Build Next.js App
        run: |
          echo "${{ needs.process_data.outputs.exists_brand }}"

      - name: Build Next.js App
        if: needs.process_data.outputs.exists_brand == 'true'
        env:
          test: ${{ needs.process_data.outputs.exists_brand }}
        run: |
          echo "${{ env.test }}"
    #   npx next build
    # env:
    #   MICROCMS_SERVICE_DOMAIN: ${{ vars.MICROCMS_SERVICE_DOMAIN }}
    #   MICROCMS_API_KEY: ${{ secrets.MICROCMS_API_KEY }}
