name: HOOK

on:
  repository_dispatch:
    types: [update-posts]

jobs:
  process_data:
    runs-on: ubuntu-latest
    steps:
      - name: Check webhook payload (store ID)
        id: check_payload
        run: |
          echo "id=${{ github.event.client_payload.id }}" >> $GITHUB_OUTPUT

      - name: Set up cURL
        uses: wei/curl@v1

      - name: Get Data from MicroCMS
        env:
          article_id: ${{ steps.check_payload.outputs.id }}
          domain: ${{ vars.MICROCMS_SERVICE_DOMAIN }}
          api_key: ${{ secrets.MICROCMS_API_KEY }}
        run: |
          DATA=$(curl -X GET "https://${{ env.domain }}.microcms.io/api/v1/news/${{ env.article_id }}" -H "X-MICROCMS-API-KEY: ${{ env.api_key }}")
          echo "$DATA" > data.json
          echo "data=$(cat data.json | jq -c '.')" >> $GITHUB_ENV

      - name: Confirm Data
        env:
          REPOSITORY: ${{ github.event.repository.name }}
          DATA: ${{ env.data }}
        run: |
          echo "$REPOSITORY"
          CATEGORY=$("$DATA" | jq -r '.category[0]')
          echo "Category: $CATEGORY"
          if [[ "$CATEGORY" == "$REPOSITORY" ]]; then
            echo "Category match: true"
            echo "exists_brand=1" >> $GITHUB_ENV
          else
            echo "Category match: false"
            echo "exists_brand=0" >> $GITHUB_ENV
          fi

  execute_process:
    needs: process_data
    if: needs.process_data.outputs.exists_brand == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Build Next.js App
        run: echo "start"
        # run: npx next build
        # env:
        #   MICROCMS_SERVICE_DOMAIN: ${{ vars.MICROCMS_SERVICE_DOMAIN }}
        #   MICROCMS_API_KEY: ${{ secrets.MICROCMS_API_KEY }}
