name: Preview URL Lighthouse Audit

on:
  workflow_dispatch:
  push:
  issue_comment:
    types: [edited]

jobs:
  call_workflow:
    uses: ./.github/workflows/_npm.yml
    with:
      node_version: "${{ vars.GIT_ACTIONS_NODE_VER }}"

  lhci:
    needs:
      - call_workflow

    name: Lighthouse
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Use Node.js 16.x
        uses: actions/setup-node@v4.0.2
        with:
          node-version: "${{ vars.GIT_ACTIONS_NODE_VER }}"

      - name: Restore node_modules
        uses: actions/cache@v4.0.2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Dependency Installation (If there is no cache)
        if: steps.restore_node_modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit --progress=false --silent
      # - name: npm install, build
      #   run: |
      #     npm install
      #     npm run build

      - name: run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.13.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    - name: Create comments
      run: |
        cat << EOF > comments
        ## Lighthouse Audit Results

        **Summary:**
        * Score: ${{ steps.lhci.outputs.ci_overall_score }}
        * Conformance score: ${{ steps.lhci.outputs.ci_performance_score }}
        * Accessibility score: ${{ steps.lhci.outputs.ci_accessibility_score }}
        * Best practices score: ${{ steps.lhci.outputs.ci_best_practices_score }}

        **Detailed results:**
        [Lighthouse CI report](${steps.lhci.outputs.lhci_report_url})

        **Please note:** This is an automated audit and may not be fully comprehensive. For more detailed analysis, please consider manual testing.
        EOF

      - name: Post comments
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          URL: ${{ github.event.pull_request.html_url }}
        run:
          gh pr comment -F ./comments "${URL}"

      # - name: Create or Update Comment
      #   uses: peter-evans/create-or-update-comment@v4.0.0
      #   with:
      #     issue-number: 1
      #     comment-id: ${{ github.event.comment.id }}
      #     reactions: eyes
      #     body: |
      #       ## Lighthouse Audit Results

      #       **Summary:**
      #       * Score: ${{ steps.lhci.outputs.ci_overall_score }}
      #       * Conformance score: ${{ steps.lhci.outputs.ci_performance_score }}
      #       * Accessibility score: ${{ steps.lhci.outputs.ci_accessibility_score }}
      #       * Best practices score: ${{ steps.lhci.outputs.ci_best_practices_score }}

      #       **Detailed results:**
      #       [Lighthouse CI report](${steps.lhci.outputs.lhci_report_url})

      #       **Please note:** This is an automated audit and may not be fully comprehensive. For more detailed analysis, please consider manual testing.
      #     reactions: '+1'
