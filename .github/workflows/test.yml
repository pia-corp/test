name: TEST

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      PR_URL: ${{github.event.pull_request.html_url}}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4.1.4
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: "${{ vars.GIT_ACTIONS_NODE_VER }}"
          cache: npm

      - name: Restore node_modules
        uses: actions/cache@v4.0.2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Dependency Installation (If there is no cache)
        if: steps.restore_node_modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit --progress=false --silent

      - name: Lint and rewrite markup
        run: npm run lint:prettier

        # releasブランチ名を作成
      - name: Create and push release branch
        id: release_branch
        run: |
          today=$(date +'%Y%m%d')
          echo "RELEASE_BRANCH_NAME=$today" >> $GITHUB_ENV

      - name: Auto-commit changes (optional)
        uses: stefanzweifel/git-auto-commit-action@v5.0.1
        with:
          commit_message: Automatically format code with Prettier
          create_branch: true
          branch: feature/${{ env.RELEASE_BRANCH_NAME }}

      - name: Check PullRequest Exists
        id: check_pr
        env:
          HEAD_MESSAGE: ${{ github.event.head_commit.message }}
        run: |
          COMMIT_MESSAGE=$(echo "${HEAD_MESSAGE}" | sed -n -e 1p)
          echo "message=${COMMIT_MESSAGE}" >> "$GITHUB_OUTPUT"
          echo "count=$(gh pr list -S 'コード整形'in:title | wc -l)" >> "$GITHUB_OUTPUT"

      - name: Create Release Pull Request
        if: ${{ steps.check_pr.outputs.count == 0 }}
        run: |
          gh pr create \
            -B main \
            -t '【コード整形】${{ steps.check_pr.outputs.message }}' \
            -a ${{ github.actor }}  \
            -b 'auto rewrite' \

      - name: Approve PR
        if: startsWith(github.head_ref, 'feature/')
        run: gh pr review "$PR_URL" --approve

      - name: Enable auto-merge for Steward PRs
        run: gh pr merge --merge --auto "$PR_URL"
