name: Build Next.js

on:
  workflow_call:
    secrets:
      APIKEY:
        required: true
      TOKEN:
        required: true

jobs:
  build_next_js:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      # githubのコンソールから入力したリリース名を環境変数へ保存
      RELEASE_BRANCH_NAME: release/${{ github.event.inputs.version }}
      # PR_URL: ${{ github.event.pull_request.html_url }}
      # GITHUB_TOKEN: ${{ secrets.TOKEN }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.1.4
        with:
          node-version: "${{ secrets.TOKEN }}"

      - name: Create and push release branch
        run: |
          RELEASE_BRANCH_NAME_WITH_SUFFIX="${{ env.RELEASE_BRANCH_NAME }}hoge"
          git checkout -b RELEASE_BRANCH_NAME_WITH_SUFFIX
          git push origin RELEASE_BRANCH_NAME_WITH_SUFFIX

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: "${{ vars.GIT_ACTIONS_NODE_VER }}"

      - uses: actions/cache@v4.0.2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Check if package-lock.json exists
        run: echo "$([[ -e 'package-lock.json' ]] && echo 'yes' || echo 'no')"
        id: check_package_lock

      - name: Dependency Installation (If there is no cache)
        if: steps.restore_node_modules.outputs.cache-hit != 'true' || steps.check_package_lock.outputs.result == 'no'
        run: npm install

      - name: Build Next.js App
        run: npm run build
        env:
          MICROCMS_SERVICE_DOMAIN: ${{ vars.MICROCMS_SERVICE_DOMAIN }}
          MICROCMS_API_KEY: ${{ secrets.APIKEY }}

      # releasブランチ -> mainブランチへのPull Requestを作成
      - name: Create PR for release
        env:
          GIT_PR_RELEASE_TOKEN: ${{ secrets.TOKEN }}
          GIT_PR_RELEASE_BRANCH_PRODUCTION: main
          GIT_PR_RELEASE_BRANCH_STAGING: ${{ env.RELEASE_BRANCH_NAME }}
          GIT_PR_RELEASE_LABELS: release
          TZ: Asia/Tokyo
        run: |
          git-pr-release --squash
          git push origin HEAD:refs/heads/main

      # - name: Approve PR
      #   run: gh pr review "$PR_URL" --approve

      # - name: Enable auto-merge
      #   run: gh pr merge --merge --auto "$PR_URL"
